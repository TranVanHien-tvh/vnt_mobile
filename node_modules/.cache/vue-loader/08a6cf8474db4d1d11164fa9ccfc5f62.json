{"remainingRequest":"D:\\VNT_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\VNT_vue\\src\\views\\activities\\AddActivity.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\VNT_vue\\src\\views\\activities\\AddActivity.vue","mtime":1670052988521},{"path":"D:\\VNT_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\VNT_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\VNT_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\VNT_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}
{"remainingRequest":"D:\\VNT_vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\VNT_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\VNT_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\VNT_vue\\src\\components\\msgridviewer\\columnoption\\msThOptionNumber.vue?vue&type=template&id=d65fa10a&scoped=true&","dependencies":[{"path":"D:\\VNT_vue\\src\\components\\msgridviewer\\columnoption\\msThOptionNumber.vue","mtime":1653205086434},{"path":"D:\\VNT_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\VNT_vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\VNT_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\VNT_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}
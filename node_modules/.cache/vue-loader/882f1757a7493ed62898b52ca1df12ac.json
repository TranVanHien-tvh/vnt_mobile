{"remainingRequest":"D:\\VNT_vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\VNT_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\VNT_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\VNT_vue\\src\\views\\activities\\ActivityDetail.vue?vue&type=template&id=278a7518&scoped=true&","dependencies":[{"path":"D:\\VNT_vue\\src\\views\\activities\\ActivityDetail.vue","mtime":1666515033287},{"path":"D:\\VNT_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\VNT_vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\VNT_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\VNT_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgImRpdiIsCiAgICB7IHN0YXRpY0NsYXNzOiAiYWN0aXZpdHktZGV0YWlsLWNvbnRhaW5lciIgfSwKICAgIFsKICAgICAgX2MoIm1zLXN5bmMtbG9hZGluZyIsIHsgYXR0cnM6IHsgImFjdGl2ZS1sb2FkaW5nIjogX3ZtLmFjdGl2ZUxvYWRpbmcgfSB9KSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJhY3Rpdml0eS1kZXRhaWwtaGVhZGVyIiB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAiZGl2IiwKICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJhY3Rpdml0eS1kZXRhaWwtaW1hZ2UiIH0sCiAgICAgICAgICBbCiAgICAgICAgICAgIF9jKCJpbWFnZS1zbGlkZSIsIHsKICAgICAgICAgICAgICBhdHRyczogeyBkYXRhU291cmNlOiBfdm0uYWN0aXZpdHlEZXRhaWwuYmFubmVyIH0KICAgICAgICAgICAgfSkKICAgICAgICAgIF0sCiAgICAgICAgICAxCiAgICAgICAgKSwKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImFjdGl2aXR5LWRldGFpbC1pbmZvIHJvdyIgfSwgWwogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ2bnQtbG9nbyIgfSksCiAgICAgICAgICBfdm0uc2l6ZSA+IDc2OCA/IF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGluZS1icmVhayIgfSkgOiBfdm0uX2UoKSwKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAib3ZlcnZpZXctc2VjdGlvbiIgfSwgWwogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm92ZXJ2aWV3LWljb24gdXNlci1pY29uIiB9KSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJvdmVydmlldy10ZXh0IiB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0udGV4dENvdW50TWVtYmVyKSkKICAgICAgICAgICAgXSkKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJsaW5lLWJyZWFrIiB9KSwKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAib3ZlcnZpZXctc2VjdGlvbiIgfSwgWwogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm92ZXJ2aWV3LWljb24gc3Rhci1pY29uIiB9KSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJvdmVydmlldy10ZXh0IiB9LCBbCiAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0udGV4dFJhdGluZykpCiAgICAgICAgICAgIF0pCiAgICAgICAgICBdKQogICAgICAgIF0pCiAgICAgIF0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImFjdGl2aXR5LWRldGFpbC1ib2R5IiB9LCBbCiAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJhY3Rpdml0eS1kZXRhaWwtdGl0bGUiIH0sIFsKICAgICAgICAgIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogImYtMzYiLCBjbGFzczogeyAiZi0yMCI6IF92bS5zaXplIDw9IDc2OCB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAiICIgKwogICAgICAgICAgICAgICAgICBfdm0uX3MoCiAgICAgICAgICAgICAgICAgICAgX3ZtLmFjdGl2aXR5RGV0YWlsLk9yZ2FuaXphdGlvbiAmJgogICAgICAgICAgICAgICAgICAgICAgX3ZtLmFjdGl2aXR5RGV0YWlsLk9yZ2FuaXphdGlvbi50aXRsZV9zaG9ydAogICAgICAgICAgICAgICAgICAgICAgPyBfdm0uYWN0aXZpdHlEZXRhaWwuT3JnYW5pemF0aW9uLnRpdGxlX3Nob3J0ICsgIiAtICIKICAgICAgICAgICAgICAgICAgICAgIDogIiIKICAgICAgICAgICAgICAgICAgKSArCiAgICAgICAgICAgICAgICAgIF92bS5fcyhfdm0uYWN0aXZpdHlEZXRhaWwudGl0bGUpICsKICAgICAgICAgICAgICAgICAgIiAiCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdCiAgICAgICAgICApLAogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJhY3Rpdml0eS1kZXRhaWwtdGl0bGUtdHlwZSIgfSwgWwogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImYtMTYgbXItMjAiIH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS5hY3Rpdml0eURldGFpbC50aGVtZVRleHQpKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJmLTE2IHB1YmxpYyIgfSwgWwogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZWFydGggbXItOCIgfSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIFtfdm0uX3YoX3ZtLl9zKF92bS5hY3Rpdml0eURldGFpbC5jb3ZlcmFnZVRleHQpKV0pCiAgICAgICAgICAgIF0pCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiYWN0aXZpdHktZGV0YWlsLXRpdGxlLWZjIiB9LCBbCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAidGFiLXNlY3Rpb24iLAogICAgICAgICAgICAgICAgY2xhc3M6IHsgInRhYi1zZWN0aW9uLWFjdGl2ZSI6IF92bS50YWJTZWxlY3QgPT0gMSB9LAogICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uc2VsZWN0VGFiKDEpCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAidGFiLWljb24gaWNvbi1kZXRhaWwiLAogICAgICAgICAgICAgICAgICBjbGFzczogeyAiaWNvbi1kZXRhaWwtYWN0aXZlIjogX3ZtLnRhYlNlbGVjdCA9PSAxIH0KICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ0YWItdGV4dCIsCiAgICAgICAgICAgICAgICAgICAgY2xhc3M6IHsgInRhYi10ZXh0LWFjdGl2ZSI6IF92bS50YWJTZWxlY3QgPT0gMSB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS50ZXh0RGV0YWlsKSArICIgIildCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXQogICAgICAgICAgICApLAogICAgICAgICAgICBfdm0uc2l6ZSA+IDc2OAogICAgICAgICAgICAgID8gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJsaW5lLWJyZWFrIiB9KQogICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAidGFiLXNlY3Rpb24iLAogICAgICAgICAgICAgICAgY2xhc3M6IHsgInRhYi1zZWN0aW9uLWFjdGl2ZSI6IF92bS50YWJTZWxlY3QgPT0gMiB9LAogICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uc2VsZWN0VGFiKDIpCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidGFiLWljb24gaWNvbi1ub3RpIiB9KSwKICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAidGFiLXRleHQiLAogICAgICAgICAgICAgICAgICAgIGNsYXNzOiB7ICJ0YWItdGV4dC1hY3RpdmUiOiBfdm0udGFiU2VsZWN0ID09IDIgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0udGV4dFBvc3QpICsgIiAiKV0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICBdCiAgICAgICAgICAgICksCiAgICAgICAgICAgIF92bS5zaXplID4gNzY4CiAgICAgICAgICAgICAgPyBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxpbmUtYnJlYWsiIH0pCiAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ0YWItc2VjdGlvbiIsCiAgICAgICAgICAgICAgICBjbGFzczogeyAidGFiLXNlY3Rpb24tYWN0aXZlIjogX3ZtLnRhYlNlbGVjdCA9PSAzIH0sCiAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5zZWxlY3RUYWIoMikKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0YWItaWNvbiBpY29uLWNoYXQiIH0pLAogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ0YWItdGV4dCIsCiAgICAgICAgICAgICAgICAgICAgY2xhc3M6IHsgInRhYi10ZXh0LWFjdGl2ZSI6IF92bS50YWJTZWxlY3QgPT0gMyB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS50ZXh0TWVzc2FnZSkgKyAiICIpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIF0KICAgICAgICAgICAgKSwKICAgICAgICAgICAgX3ZtLnNpemUgPiA3NjgKICAgICAgICAgICAgICA/IF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibGluZS1icmVhayIgfSkKICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInRhYi1zZWN0aW9uIiwKICAgICAgICAgICAgICAgIGNsYXNzOiB7ICJ0YWItc2VjdGlvbi1hY3RpdmUiOiBfdm0udGFiU2VsZWN0ID09IDQgfSwKICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnNlbGVjdFRhYigyKQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRhYi1pY29uIGljb24tcGFwZXIiIH0pLAogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ0YWItdGV4dCIsCiAgICAgICAgICAgICAgICAgICAgY2xhc3M6IHsgInRhYi10ZXh0LWFjdGl2ZSI6IF92bS50YWJTZWxlY3QgPT0gNCB9CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS50ZXh0VGFzaykgKyAiICIpXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIF0KICAgICAgICAgICAgKQogICAgICAgICAgXSkKICAgICAgICBdKSwKICAgICAgICBfYygiZGl2IiwgWwogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJhZGRyZXNzLXRpbWUiIH0sIFsKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0aW1lIiB9LCBbCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaWNvbi1jYWxlbmRhciIsCiAgICAgICAgICAgICAgICBjbGFzczogeyBpY29uOTA6IF92bS5zaXplID4gNzY4LCBpY29uMzI6IF92bS5zaXplIDw9IDc2OCB9CiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJmLTE2IHRleHQtdHlwZSIgfSwgWwogICAgICAgICAgICAgICAgX3ZtLl92KCJUaOG7nWkgZ2lhbiBkaeG7hW4gcmEiKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicGxyLTUiLAogICAgICAgICAgICAgICAgICBjbGFzczogeyAiZi0xNCI6IF92bS5zaXplIDw9IDc2OCwgImYtMTgiOiBfdm0uc2l6ZSA+IDc2OCB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgIiBU4burIG5nw6B5ICIgKwogICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKF92bS5tb21lbnREYXRlKF92bS5hY3Rpdml0eURldGFpbC5zdGFydF90aW1lKSkgKwogICAgICAgICAgICAgICAgICAgICAgIiDEkeG6v24gbmfDoHkgIiArCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoX3ZtLm1vbWVudERhdGUoX3ZtLmFjdGl2aXR5RGV0YWlsLmVuZF90aW1lKSkgKwogICAgICAgICAgICAgICAgICAgICAgIi4gIgogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJhZGRyZXNzIiB9LCBbCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaWNvbi1wbGFjZSIsCiAgICAgICAgICAgICAgICBjbGFzczogeyBpY29uOTA6IF92bS5zaXplID4gNzY4LCBpY29uMzI6IF92bS5zaXplIDw9IDc2OCB9CiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJmLTE2IHRleHQtdHlwZSIgfSwgWwogICAgICAgICAgICAgICAgX3ZtLl92KCLEkOG7i2EgxJFp4buDbSIpCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJwbHItNSIsCiAgICAgICAgICAgICAgICAgIGNsYXNzOiB7ICJmLTE0IjogX3ZtLnNpemUgPD0gNzY4LCAiZi0xOCI6IF92bS5zaXplID4gNzY4IH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uYWN0aXZpdHlEZXRhaWwuYWRkcmVzcykgKyAiLiAiKV0KICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0pCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaW5mbyIgfSwgWwogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImluZm8tdGl0bGUiIH0sIFsKICAgICAgICAgICAgICBfdm0uX3YoIkdp4bubaSB0aGnhu4d1IGNodW5nIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaW5mby1kZXNjcmlwdGlvbiIgfSwgWwogICAgICAgICAgICAgIF92bS5fdigiICIgKyBfdm0uX3MoX3ZtLmFjdGl2aXR5RGV0YWlsLmRlc2NyaXB0aW9uKSArICIgIikKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJpbmZvLWJ1dHRvbiIgfSwKICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICBmYWxzZQogICAgICAgICAgICAgICAgICA/IF9jKCJtcy1idXR0b24iLCB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJ0biBzZWNvbmRhcnkiLAogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogImZvdXIiLCB0ZXh0OiAiWGVtIHRow6ptIiB9CiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgMQogICAgICAgICAgICApCiAgICAgICAgICBdKSwKICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAic2NoZWR1bGUiIH0sIFsKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJzY2hlZHVsZS10aXRsZSIgfSwgWwogICAgICAgICAgICAgIF92bS5fdigiTOG7i2NoIHRyw6xuaCIpCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygKICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAic2NoZWR1bGUtYm9keSIgfSwKICAgICAgICAgICAgICBfdm0uX2woX3ZtLmFjdGl2aXR5RGV0YWlsLnNjaGVkdWxlX2RhdGEsIGZ1bmN0aW9uKGl0ZW0sIGluZGV4KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gX2MoImRpdiIsIHsga2V5OiBpbmRleCwgc3RhdGljQ2xhc3M6ICJzY2hlZHVsZS1pdGVtIiB9LCBbCiAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAic2NoZWR1bGUtZGF0ZXRpbWUiIH0sIFsKICAgICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInNjaGVkdWxlLXRpbWUiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICAgIiAiICsgX3ZtLl9zKF92bS5tb21lbnRUaW1lKGl0ZW0uc3RhcnRfdGltZSkpICsgIiAiCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJzY2hlZHVsZS1kYXRlIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAgICIgIiArIF92bS5fcyhfdm0ubW9tZW50RGF0ZShpdGVtLnN0YXJ0X3RpbWUpKSArICIgIgogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInNjaGVkdWxlLWljb24iIH0sIFsKICAgICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImljb24zNiBpY29uLWdyb3VwLXRpbWUiIH0pLAogICAgICAgICAgICAgICAgICAgIGluZGV4IDw9CiAgICAgICAgICAgICAgICAgICAgKF92bS5hY3Rpdml0eURldGFpbC5zY2hlZHVsZV9kYXRhCiAgICAgICAgICAgICAgICAgICAgICA/IF92bS5hY3Rpdml0eURldGFpbC5zY2hlZHVsZV9kYXRhLmxlbmd0aCAtIDIKICAgICAgICAgICAgICAgICAgICAgIDogMCkKICAgICAgICAgICAgICAgICAgICAgID8gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJpY29uLWxpbmUiIH0pCiAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInNjaGVkdWxlLWNvbnRlbnQiIH0sIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKGl0ZW0uZGVzY3JpcHRpb24pICsgIi4iKQogICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAwCiAgICAgICAgICAgICkKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0YXJnZXQiIH0sIFsKICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0YXJnZXQtY29udGVudCIgfSwgWwogICAgICAgICAgICAgIF92bS5fbSgwKSwKICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRhcmdldC1yaWdodCIgfSwgWwogICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0YXJnZXQtcmlnaHQtdGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgICAgX3ZtLl92KCJRdeG7uSBxdXnDqm4gZ8OzcCBjaG8gaG/huqF0IMSR4buZbmciKQogICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRhcmdldC1yaWdodC1wZXJjZW50IiB9LCBbCiAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJ0YXJnZXQtcmlnaHQtcGVyY2VudC1sZWZ0IiwKICAgICAgICAgICAgICAgICAgICBzdHlsZTogeyB3aWR0aDogX3ZtLnBlcmNlbnQgKyAiJSIgfQogICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInRhcmdldC1yaWdodC1wZXJjZW50LXJpZ2h0IiwKICAgICAgICAgICAgICAgICAgICBzdHlsZTogeyB3aWR0aDogMTAwIC0gX3ZtLnBlcmNlbnQgKyAiJSIgfQogICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRhcmdldC1yaWdodC1jb250cmlidXRlIiB9LCBbCiAgICAgICAgICAgICAgICAgIF92bS5fdigiIMSQ4bqhdCAiKSwKICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKF92bS5hY3Rpdml0eURldGFpbC5kb25hdGVkIC8gMTAwMDAwMCkgKyAiIHRyaeG7h3UiCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgdHLDqm4gdOG7lW5nIHPhu5EgIiksCiAgICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhfdm0uYWN0aXZpdHlEZXRhaWwudG90YWxEb25hdGUgLyAxMDAwMDAwKSArCiAgICAgICAgICAgICAgICAgICAgICAgICIgdHJp4buHdS4gKCIgKwogICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoX3ZtLnBlcmNlbnQpICsKICAgICAgICAgICAgICAgICAgICAgICAgIiUpIgogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0YXJnZXQtcmlnaHQtdXNlci1jb250cmlidXRlIiB9LCBbCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJ0YXJnZXQtcmlnaHQtdXNlci1hdmF0YXIiIH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX3ZtLl9sKF92bS5hY3Rpdml0eURldGFpbC5tZW1iZXJEb25hdGVkLCBmdW5jdGlvbigKICAgICAgICAgICAgICAgICAgICAgICAgaXRlbSwKICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXgKICAgICAgICAgICAgICAgICAgICAgICkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5OiBpbmRleCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAidXNlci1hdmF0YXIiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbmRleCA9PSAwCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IDAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogKyhfdm0uc2l6ZSA8PSA3NjgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IGluZGV4ICogMTQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IGluZGV4ICogMjQpICsgInB4IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5hdmF0YXIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6ICIxMDAlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAiMTAwJSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IGl0ZW0uYXZhdGFyLCBhbHQ6ICIiIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgIWl0ZW0uYXZhdGFyCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAiMTAwJSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogIjEwMCUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9pbWFnZXMvaWNvbnMvbm8tYXZhdGFyLnBuZyIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhbHQ6ICIiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICBfdm0uYWN0aXZpdHlEZXRhaWwubWVtYmVyRG9uYXRlZCAmJgogICAgICAgICAgICAgICAgICAgICAgX3ZtLmFjdGl2aXR5RGV0YWlsLm1lbWJlckRvbmF0ZWQubGVuZ3RoID4gNwogICAgICAgICAgICAgICAgICAgICAgICA/IF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidXNlci1lbGxpcHNlIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImljb25fdGhyZWVfZG90IiB9KQogICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCkKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIDIKICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0YXJnZXQtcmlnaHQtdXNlci10b3RhbCIgfSwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICIgIiArCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcygKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uYWN0aXZpdHlEZXRhaWwubWVtYmVyRG9uYXRlZCAmJgogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmFjdGl2aXR5RGV0YWlsLm1lbWJlckRvbmF0ZWQubGVuZ3RoCiAgICAgICAgICAgICAgICAgICAgICAgICkgKwogICAgICAgICAgICAgICAgICAgICAgICAiIG5nxrDhu51pIMSRw6MgcXV5w6puIGfDs3AgIgogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgX3ZtLl9tKDEpCiAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgXSkKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJhY3Rpdml0eS1pbWFnZSIgfSwgWwogICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImFjdGl2aXR5LWltYWdlLWhlYWRlciIgfSwgWwogICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiYWN0aXZpdHktaW1hZ2UtdGl0bGUiIH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdigi4bqibmgiKQogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJtcy1idXR0b24iLCB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJidG4gYnRuLWFjdGl2aXR5LWltZyIsCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogInNlY29uZGFyeSIsIHRleHQ6ICJYZW0gdOG6pXQgY+G6oyIgfSwKICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnNob3dQb3B1cERvd25sb2FkKCkKICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJsaXN0LWltYWdlIiB9LAogICAgICAgICAgICAgIF92bS5fbChfdm0uaW1hZ2VzLCBmdW5jdGlvbihpdGVtLCBpbmRleCkgewogICAgICAgICAgICAgICAgcmV0dXJuIF9jKCJkaXYiLCB7IGtleTogaW5kZXgsIHN0YXRpY0NsYXNzOiAiaXRlbS1pbWFnZSIgfSwgWwogICAgICAgICAgICAgICAgICBpbmRleCA8IDYKICAgICAgICAgICAgICAgICAgICA/IF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IHdpZHRoOiAiMTAwJSIsIGhlaWdodDogIjEwMCUiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogaXRlbS5pbWFnZV91cmwsIGFsdDogIiIgfQogICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgICAgICBpbmRleCA9PSA1CiAgICAgICAgICAgICAgICAgICAgPyBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImltYWdlLWJsdXJlIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaW1hZ2UtZWxsaXBzZSIgfSksCiAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaW1hZ2UtdGV4dCIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICAgICAgICIgKyIgKwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoX3ZtLmFjdGl2aXR5RGV0YWlsLmltYWdlcy5sZW5ndGggLSA2KSArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICIgIgogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKQogICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAwCiAgICAgICAgICAgICkKICAgICAgICAgIF0pLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAiYWN0aW9uLXNoYXJlLWFjY2VwdCIgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJtcy1idXR0b24iLCB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImJ0bi1hY3Rpb24tc2hhcmUtYWNjZXB0IiwKICAgICAgICAgICAgICAgIGF0dHJzOiB7IHR5cGU6ICJmb3VyIiwgdGV4dDogIlRoYW0gZ2lhIiB9LAogICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uc2hvd1BvcHVwRG93bmxvYWQoKQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgX2MoImRpdiIsIHsKICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiaWNvbjU2IGljb24tdW5jYXJlLWFjdCIsCiAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5zaG93UG9wdXBEb3dubG9hZCgpCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICBfYygiZGl2IiwgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJpY29uNTYgaWNvbi1iaS1oZWFydCIsCiAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5zaG93UG9wdXBEb3dubG9hZCgpCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICBfYygiZGl2IiwgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJpY29uNTYgaWNvbi1yZWZlciIsCiAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5zaG93UG9wdXBEb3dubG9hZCgpCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KQogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApCiAgICAgICAgXSkKICAgICAgXSkKICAgIF0sCiAgICAxCiAgKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInRhcmdldC1sZWZ0IiB9LCBbCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiaWNvbjU2IGljb24tdGFyZ2V0IiB9KSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0YXJnZXQtbGVmdC10aXRsZSIgfSwgW192bS5fdigiTeG7pWMgdGnDqnUiKV0pCiAgICBdKQogIH0sCiAgZnVuY3Rpb24oKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbnRyaWJ1dGUtc2VjdGlvbiIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbnRyaWJ1dGUtaWNvbiIgfSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29udHJpYnV0ZS10ZXh0IiB9LCBbX3ZtLl92KCLEkMOzbmcgZ8OzcCIpXSkKICAgIF0pCiAgfQpdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}
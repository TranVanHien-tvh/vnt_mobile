{"remainingRequest":"D:\\VNT_vue\\node_modules\\babel-loader\\lib\\index.js!D:\\VNT_vue\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\VNT_vue\\src\\stores\\movement\\register-approval-synthesize\\module-approve-personal.js","dependencies":[{"path":"D:\\VNT_vue\\src\\stores\\movement\\register-approval-synthesize\\module-approve-personal.js","mtime":1653205086671},{"path":"D:\\VNT_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\VNT_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\VNT_vue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6L1ZOVF92dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICJEOi9WTlRfdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgYXBpIGZyb20gIkAvYXBpcy9tb3ZlbWVudC9lbXVsYXRpb25SZWdpc3RlckFQSSI7CmltcG9ydCBDcnVkIGZyb20gIkAvc3RvcmVzL2Jhc2UvY3J1ZC1iYXNlIjsKdmFyIGNydWQgPSBuZXcgQ3J1ZCgiRW11bGF0aW9uUmVnaXN0ZXIiLCBhcGkpOwoKdmFyIHN0YXRlID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBjcnVkLnN0YXRlKSwge30sIHsKICBfY29uZmlnOiB7CiAgICBmaWVsZDogewogICAgICBrZXk6ICJFbXVsYXRpb25SZWdpc3RlcklEIiwKICAgICAgbmFtZTogIkZ1bGxOYW1lIgogICAgfQogIH0KfSk7Cgp2YXIgZ2V0dGVycyA9IF9vYmplY3RTcHJlYWQoe30sIGNydWQuZ2V0dGVycyk7Cgp2YXIgYWN0aW9ucyA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgY3J1ZC5hY3Rpb25zKSwge30sIHsKICAvKioNCiAgICogTG9hZCBkYW5oIHPDoWNoIGPDoSBuaMOibg0KICAgKiBPdmVycmlkZSDEkeG7gyBn4buNaSBhcGkgcmnDqm5nDQogICAqIE5UQkFPOiAyNC4xMS4yMDIxDQogICAqIEBwYXJhbSB7Kn0gY29udGV4dA0KICAgKiBAcGFyYW0geyp9IHBheWxvYWQNCiAgICogQHJldHVybnMNCiAgICovCiAgbG9hZDogZnVuY3Rpb24gbG9hZChjb250ZXh0LCBwYXlsb2FkKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgcmVzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgcmVzID0gbnVsbDsKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgidXBkYXRlTG9hZGluZyIsIHRydWUpOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgIHJldHVybiBhcGkubG9hZExpc3REZXRhaWxQYWdpbmcocGF5bG9hZCB8fCB7fSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gNjsKICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgidXBkYXRlTG9hZGluZyIsIGZhbHNlKTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuZmluaXNoKDYpOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIGlmIChyZXMpIHsKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCJzZXRJdGVtcyIsIHsKICAgICAgICAgICAgICAgICAgcmVzdWx0OiByZXMsCiAgICAgICAgICAgICAgICAgIHBheWxvYWQ6IHBheWxvYWQKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgcmVzKTsKCiAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMSwsIDYsIDldXSk7CiAgICB9KSkoKTsKICB9LAoKICAvKioNCiAgICogR+G7jWkgYXBpIGxvYWQgc3VtYXJ5IChkw7JuZyB04buVbmcgY+G7mW5nLCBjaGkgdGnhur90IHRow7RuZyBz4buRIOG7nyBmb29vdGVyKQ0KICAgKiBPdmVycmlkZSDEkeG7gyBn4buNaSBhcGkgcmnDqm5nDQogICAqIE5UQkFPOiAyNC4xMS4yMDIxDQogICAqIEBwYXJhbSB7Kn0gY29udGV4dA0KICAgKiBAcGFyYW0geyp9IHBheWxvYWQNCiAgICogQHJldHVybnMNCiAgICovCiAgbG9hZFN1bW1hcnk6IGZ1bmN0aW9uIGxvYWRTdW1tYXJ5KGNvbnRleHQsIHBheWxvYWQpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKCkgewogICAgICB2YXIgcmVzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIHJlcyA9IG51bGw7CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxOwogICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCJ1cGRhdGVMb2FkaW5nU3VtbWFyeSIsIHRydWUpOwogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNTsKICAgICAgICAgICAgICByZXR1cm4gYXBpLmxvYWRMaXN0RGV0YWlsUGFnaW5nKHBheWxvYWQgfHwge30pOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0Mi5zZW50OwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gNjsKICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgidXBkYXRlTG9hZGluZ1N1bW1hcnkiLCBmYWxzZSk7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5maW5pc2goNik7CgogICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgaWYgKHJlcykgewogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoInNldEl0ZW1zIiwgewogICAgICAgICAgICAgICAgICByZXN1bHQ6IHJlcywKICAgICAgICAgICAgICAgICAgcGF5bG9hZDogcGF5bG9hZAogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgcmVzKTsKCiAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1sxLCwgNiwgOV1dKTsKICAgIH0pKSgpOwogIH0KfSk7Cgp2YXIgbXV0YXRpb25zID0gX29iamVjdFNwcmVhZCh7fSwgY3J1ZC5tdXRhdGlvbnMpOwoKZXhwb3J0IGRlZmF1bHQgewogIGRlYnVnOiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gInByb2R1Y3Rpb24iLAogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHN0YXRlLAogIG11dGF0aW9uczogbXV0YXRpb25zLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgZ2V0dGVyczogZ2V0dGVycwp9Ow=="},null]}
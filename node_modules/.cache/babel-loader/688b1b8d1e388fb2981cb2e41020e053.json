{"remainingRequest":"D:\\VNT_vue\\node_modules\\babel-loader\\lib\\index.js!D:\\VNT_vue\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\VNT_vue\\src\\apis\\movement\\emulationRegisterAPI.js","dependencies":[{"path":"D:\\VNT_vue\\src\\apis\\movement\\emulationRegisterAPI.js","mtime":1653205085591},{"path":"D:\\VNT_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\VNT_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\VNT_vue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRDovVk5UX3Z1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiRDovVk5UX3Z1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIkQ6L1ZOVF92dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQgZnJvbSAiRDovVk5UX3Z1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXNzZXJ0VGhpc0luaXRpYWxpemVkIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICJEOi9WTlRfdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cyI7CmltcG9ydCBfY3JlYXRlU3VwZXIgZnJvbSAiRDovVk5UX3Z1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlU3VwZXIiOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIkQ6L1ZOVF92dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCBodHRwQ2xpZW50IGZyb20gIkAvYXBpcy9iYXNlL2F4aW9zSHR0cENsaWVudCI7CmltcG9ydCBjb21tb25GbiBmcm9tICJAL2NvbW1vbnMvY29tbW9uRnVuY3Rpb24iOwppbXBvcnQgQmFzZUFQSSBmcm9tICJAL2FwaXMvYmFzZS9iYXNlQVBJIjsKCnZhciBFbXVsYXRpb25SZWdpc3RlckFQSSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0Jhc2VBUEkpIHsKICBfaW5oZXJpdHMoRW11bGF0aW9uUmVnaXN0ZXJBUEksIF9CYXNlQVBJKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihFbXVsYXRpb25SZWdpc3RlckFQSSk7CgogIGZ1bmN0aW9uIEVtdWxhdGlvblJlZ2lzdGVyQVBJKCkgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBFbXVsYXRpb25SZWdpc3RlckFQSSk7CgogICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzKTsKCiAgICBfZGVmaW5lUHJvcGVydHkoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcyksICJhcGlOYW1lIiwgIkJ1c2luZXNzIik7CgogICAgX2RlZmluZVByb3BlcnR5KF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpLCAiY29udHJvbGxlck5hbWUiLCAiRW11bGF0aW9uUmVnaXN0ZXIiKTsKCiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoRW11bGF0aW9uUmVnaXN0ZXJBUEksIFt7CiAgICBrZXk6ICJsb2FkTGlzdFJlZ2lzdGVyRGV0YWlsUGFnaW5nIiwKICAgIHZhbHVlOgogICAgLyoqDQogICAgICogTOG6pXkgZGFuaCBzw6FjaCDEkcSDbmcga8O9IGNoaSB0aeG6v3QgdMO0aSBs4bqtcA0KICAgICAqIEBwYXJhbSB7Kn0gcGF5bG9hZA0KICAgICAqIEByZXR1cm5zDQogICAgICovCiAgICBmdW5jdGlvbiBsb2FkTGlzdFJlZ2lzdGVyRGV0YWlsUGFnaW5nKHBheWxvYWQpIHsKICAgICAgdmFyIG1lID0gdGhpcywKICAgICAgICAgIHJlcXVlc3QgPSB7CiAgICAgICAgdXJsOiBtZS5nZXRBUElVcmwoKSArICIvcmVnaXN0ZXItZGV0YWlsLWxpc3QiLAogICAgICAgIGRhdGE6IHBheWxvYWQKICAgICAgfTsKICAgICAgcmV0dXJuIGh0dHBDbGllbnQucG9zdEFzeW5jKHJlcXVlc3QpOwogICAgfQogICAgLyoqDQogICAgICogTOG6pXkgZGFuaCBzw6FjaCDEkcSDbmcga8O9IGNoaSB0aeG6v3QNCiAgICAgKiBAcGFyYW0geyp9IHBheWxvYWQNCiAgICAgKiBAcmV0dXJucw0KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJsb2FkTGlzdERldGFpbFBhZ2luZyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbG9hZExpc3REZXRhaWxQYWdpbmcocGF5bG9hZCkgewogICAgICB2YXIgbWUgPSB0aGlzLAogICAgICAgICAgcmVxdWVzdCA9IHsKICAgICAgICB1cmw6IG1lLmdldEFQSVVybCgpICsgIi9kZXRhaWwtbGlzdCIsCiAgICAgICAgZGF0YTogcGF5bG9hZAogICAgICB9OwogICAgICByZXR1cm4gaHR0cENsaWVudC5wb3N0QXN5bmMocmVxdWVzdCk7CiAgICB9CiAgICAvKioNCiAgICAgKiBJbnNlcnQgaOG7kyBzxqEgxJHEg25nIGvDvSB0aGkgxJF1YQ0KICAgICAqIEBwYXJhbSB7Kn0gcGFyYW0NCiAgICAgKiBAcmV0dXJucw0KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJpbnNlcnRFbXVsYXRpb25SZWdpc3RlciIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaW5zZXJ0RW11bGF0aW9uUmVnaXN0ZXIocGFyYW0pIHsKICAgICAgdmFyIG1lID0gdGhpcywKICAgICAgICAgIHJlcXVlc3QgPSB7CiAgICAgICAgdXJsOiBtZS5nZXRBUElVcmwoKSArICIvc2F2ZS1lbXVsYXRpb24tcmVnaXN0ZXIiLAogICAgICAgIGRhdGE6IHBhcmFtCiAgICAgIH07CiAgICAgIHJldHVybiBodHRwQ2xpZW50LnBvc3RBc3luYyhyZXF1ZXN0KTsKICAgIH0KICAgIC8qKg0KICAgICAqICAqIEzhuqV5IGRhbmggc8OhY2ggxJHGoW4gduG7iyBjw7MgdGhhbSBnaWEgcGhvbmcgdHLDoG8gdGhpIMSRdWEgY2hvIGNvbWJvIMSRxqFuIHbhu4sgVGFiIFThu5VuZyBo4bujcCDEkcSDbmcga8O9DQogICAgICogTlRCQU8gMDguMTEuMjAyMQ0KICAgICAqIEBwYXJhbSB7Kn0gcGF5bG9hZA0KICAgICAqIEByZXR1cm5zDQogICAgICovCgogIH0sIHsKICAgIGtleTogImxvYWRMaXN0T3JnVHJlZVBhZ2luZyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbG9hZExpc3RPcmdUcmVlUGFnaW5nKHBheWxvYWQpIHsKICAgICAgdmFyIG1lID0gdGhpczsKCiAgICAgIHZhciBwYXJhbSA9IF9vYmplY3RTcHJlYWQoe30sIHBheWxvYWQpOyAvL3jhu60gbMO9IHRoYW0gc+G7kSB0csaw4bubYyBraGkgcmVxdWVzdCBsb2FkIGThu68gbGnhu4d1CgoKICAgICAgY29tbW9uRm4ucHJvY2Vzc0NvbWJvYm94UGFyYW1SZXF1ZXN0KHBhcmFtKTsKICAgICAgdmFyIHJlcXVlc3QgPSB7CiAgICAgICAgdXJsOiBtZS5nZXRBUElVcmwoKSArICIvb3JnLXRyZWUtcGFnaW5nIiwKICAgICAgICBkYXRhOiBwYXJhbQogICAgICB9OwogICAgICByZXR1cm4gaHR0cENsaWVudC5wb3N0QXN5bmMocmVxdWVzdCk7CiAgICB9CiAgICAvKioNCiAgICAgKiB1cGRhdGUgbmhp4buBdSBi4bqjbiBnaGkgY8OhYyB0aMO0bmcgdGluIGRhbmggaGnhu4d1IHRoaSDEkXVhLCBow6xuaCB0aOG7qWMga2hlbiB0aMaw4bufbmcsIG7hu5lpIGR1bmcsIHRy4bqhbmcgdGjDoWkgbcOgbiDEkcSDbmcga8O9IHRoaSDEkXVhDQogICAgICogTlRUSEFOSDENCiAgICAgKiBAcGFyYW0geyp9IHBheWxvYWQNCiAgICAgKiBAcmV0dXJucw0KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJ1cGRhdGVNdWx0aUVtdWxhdGlvblJlZ2lzdGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiB1cGRhdGVNdWx0aUVtdWxhdGlvblJlZ2lzdGVyKHBheWxvYWQpIHsKICAgICAgdmFyIG1lID0gdGhpczsKICAgICAgdmFyIHJlcXVlc3QgPSB7CiAgICAgICAgdXJsOiBbdGhpcy5nZXRBUElVcmwoKSwgInVwZGF0ZS1tdWx0aSJdLmpvaW4oIi8iKSwKICAgICAgICBkYXRhOiBwYXlsb2FkCiAgICAgIH07CiAgICAgIHJldHVybiBodHRwQ2xpZW50LnBvc3RBc3luYyhyZXF1ZXN0LCB0cnVlKTsKICAgIH0KICAgIC8qKg0KICAgICogQ+G6rXAgbmjhuq10IHRy4bqhbmcgdGjDoWkgZ+G7rWkgaG/DoG4gdGjDoG5oIMSRxINuZyBrw70gY+G7p2EgcGhvbmcgdHLDoG8NCiAgICAqIE5UQkFPIDAyLjExLjIwMjENCiAgICAqIEBwYXJhbSB7Kn0gcGF5bG9hZA0KICAgICovCgogIH0sIHsKICAgIGtleTogInVwZGF0ZUNvbXBsZXRlUmVnaXN0ZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHVwZGF0ZUNvbXBsZXRlUmVnaXN0ZXIocGF5bG9hZCkgewogICAgICB2YXIgbWUgPSB0aGlzOwogICAgICB2YXIgcmVxdWVzdCA9IHsKICAgICAgICB1cmw6IFt0aGlzLmdldEFQSVVybCgpLCAidXBkYXRlLUNvbXBsZXRlUmVnaXN0ZXIiXS5qb2luKCIvIiksCiAgICAgICAgZGF0YTogcGF5bG9hZAogICAgICB9OwogICAgICByZXR1cm4gaHR0cENsaWVudC5wb3N0QXN5bmMocmVxdWVzdCwgdHJ1ZSk7CiAgICB9CiAgICAvKioNCiAgICAgKiDEkOG6v20gdOG7lW5nIHPhu5EgZGFuaCBoaeG7h3UsIGjDrG5oIHRo4bupYyDEkcSDbmcga8O9IHRoaSDEkXVhDQogICAgICogTlRUSEFOSDENCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiZ2V0Q291bnRFbXVsYXRpb25SZXdhcmQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldENvdW50RW11bGF0aW9uUmV3YXJkKHBheWxvYWQpIHsKICAgICAgdmFyIG1lID0gdGhpczsKICAgICAgdmFyIHJlcXVlc3QgPSB7CiAgICAgICAgdXJsOiBbdGhpcy5nZXRBUElVcmwoKSwgImdldC1jb3VudC1lbXVsYXRpb24iXS5qb2luKCIvIiksCiAgICAgICAgZGF0YTogcGF5bG9hZAogICAgICB9OwogICAgICByZXR1cm4gaHR0cENsaWVudC5wb3N0QXN5bmMocmVxdWVzdCwgdHJ1ZSk7CiAgICB9CiAgICAvKioNCiAgICAgKiDEkOG6v20gdOG7lW5nIHPhu5EgY8OhIG5ow6JuLCB04bqtcCB0aOG7gyDEkcSDbmcga8O9IHRoaSDEkXVhDQogICAgICogTlRUSEFOSDEgMTYvMDMvMjAyMg0KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJnZXRDb3VudFBlcnNvbmFsVGVhbSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gZ2V0Q291bnRQZXJzb25hbFRlYW0ocGF5bG9hZCkgewogICAgICB2YXIgbWUgPSB0aGlzOwogICAgICB2YXIgcmVxdWVzdCA9IHsKICAgICAgICB1cmw6IFt0aGlzLmdldEFQSVVybCgpLCAiY291bnQtdG90YWwtcGVyc29uYWwtdGVhbSJdLmpvaW4oIi8iKSwKICAgICAgICBkYXRhOiBwYXlsb2FkCiAgICAgIH07CiAgICAgIHJldHVybiBodHRwQ2xpZW50LnBvc3RBc3luYyhyZXF1ZXN0LCB0cnVlKTsKICAgIH0KICB9XSk7CgogIHJldHVybiBFbXVsYXRpb25SZWdpc3RlckFQSTsKfShCYXNlQVBJKTsKCmV4cG9ydCBkZWZhdWx0IG5ldyBFbXVsYXRpb25SZWdpc3RlckFQSSgpOw=="},null]}
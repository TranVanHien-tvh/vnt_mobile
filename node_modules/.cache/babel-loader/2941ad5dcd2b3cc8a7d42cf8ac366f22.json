{"remainingRequest":"D:\\VNT_vue\\node_modules\\babel-loader\\lib\\index.js!D:\\VNT_vue\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\VNT_vue\\src\\stores\\movement\\register-approval-synthesize\\module-register-emulation.js","dependencies":[{"path":"D:\\VNT_vue\\src\\stores\\movement\\register-approval-synthesize\\module-register-emulation.js","mtime":1653205086673},{"path":"D:\\VNT_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\VNT_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\VNT_vue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6L1ZOVF92dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICJEOi9WTlRfdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgYXBpIGZyb20gIkAvYXBpcy9tb3ZlbWVudC9lbXVsYXRpb25SZWdpc3RlckFQSSI7CmltcG9ydCBDcnVkIGZyb20gIkAvc3RvcmVzL2Jhc2UvY3J1ZC1iYXNlIjsKdmFyIGNydWQgPSBuZXcgQ3J1ZCgiRW11bGF0aW9uUmVnaXN0ZXIiLCBhcGkpOwoKdmFyIHN0YXRlID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBjcnVkLnN0YXRlKSwge30sIHsKICBfY29uZmlnOiB7CiAgICBmaWVsZDogewogICAgICBrZXk6ICJFbXVsYXRpb25SZWdpc3RlcklEIgogICAgfQogIH0sCiAgbGlzdFRlYW1SZWdpc3RlcnM6IFtdLAogIGxpc3RUZWFtUmVnaXN0ZXJzVG90YWw6IDAsCiAgbGlzdFBlcnNvbmFsUmVnaXN0ZXJzOiBbXSwKICBsaXN0UGVyc29uYWxSZWdpc3RlcnNUb3RhbDogMAp9KTsKCnZhciBnZXR0ZXJzID0gX29iamVjdFNwcmVhZCh7fSwgY3J1ZC5nZXR0ZXJzKTsKCnZhciBhY3Rpb25zID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBjcnVkLmFjdGlvbnMpLCB7fSwgewogIC8qKg0KICAgKiBM4bqleSBkYW5oIHPDoWNoIMSRxINuZyBrw70gdGhpIMSRdWEgDQogICAqIE5UQkFPIDAyLjExLjIwMjENCiAgICogQHBhcmFtIHsqfSBjb250ZXh0IA0KICAgKiBAcGFyYW0geyp9IHBhcmFtIA0KICAgKiBAcmV0dXJucyANCiAgICovCiAgbG9hZExpc3REZXRhaWxQYWdpbmc6IGZ1bmN0aW9uIGxvYWRMaXN0RGV0YWlsUGFnaW5nKGNvbnRleHQsIHBhcmFtKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgcmVzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgcmVzID0gbnVsbDsKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgidXBkYXRlTG9hZGluZyIsIHRydWUpOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgIHJldHVybiBhcGkubG9hZExpc3REZXRhaWxQYWdpbmcocGFyYW0ucGF5bG9hZCB8fCB7fSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQuc2VudDsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gNjsKICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgidXBkYXRlTG9hZGluZyIsIGZhbHNlKTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuZmluaXNoKDYpOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIGlmIChyZXMpIHsKICAgICAgICAgICAgICAgIGlmIChwYXJhbS5zY3JlZW5LZXkgPT0gInRlYW0iKSB7CiAgICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCJzZXRMaXN0VGVhbVJlZ2lzdGVycyIsIHsKICAgICAgICAgICAgICAgICAgICByZXN1bHQ6IHJlcywKICAgICAgICAgICAgICAgICAgICBwYXlsb2FkOiBwYXJhbS5wYXlsb2FkCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfSBlbHNlIGlmIChwYXJhbS5zY3JlZW5LZXkgPT0gInBlcnNvbmFsIikgewogICAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgic2V0TGlzdFBlcnNvbmFsUmVnaXN0ZXJzIiwgewogICAgICAgICAgICAgICAgICAgIHJlc3VsdDogcmVzLAogICAgICAgICAgICAgICAgICAgIHBheWxvYWQ6IHBhcmFtLnBheWxvYWQKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCByZXMpOwoKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1sxLCwgNiwgOV1dKTsKICAgIH0pKSgpOwogIH0sCgogIC8qKg0KICAgKiBM4bqleSB0b3RhbCBkYW5oIHPDoWNoIMSRxINuZyBrw70gdGhpIMSRdWENCiAgICogQHBhcmFtIHsqfSBjb250ZXh0IA0KICAgKiBAcGFyYW0geyp9IHBhcmFtIA0KICAgKiBAcmV0dXJucyANCiAgICogTlRCQU8gMDIuMTEuMjAyMQ0KICAgKi8KICBsb2FkU3VtbWFyeUxpc3REZXRhaWw6IGZ1bmN0aW9uIGxvYWRTdW1tYXJ5TGlzdERldGFpbChjb250ZXh0LCBwYXJhbSkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciByZXM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgcmVzID0gbnVsbDsKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDE7CiAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoInVwZGF0ZUxvYWRpbmdTdW1tYXJ5IiwgdHJ1ZSk7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgIHJldHVybiBhcGkubG9hZExpc3REZXRhaWxQYWdpbmcocGFyYW0ucGF5bG9hZCB8fCB7fSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQyLnNlbnQ7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSA2OwogICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCJ1cGRhdGVMb2FkaW5nU3VtbWFyeSIsIGZhbHNlKTsKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmZpbmlzaCg2KTsKCiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICBpZiAocmVzKSB7CiAgICAgICAgICAgICAgICBpZiAocGFyYW0uc2NyZWVuS2V5ID09ICJ0ZWFtIikgewogICAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgic2V0TGlzdFRlYW1SZWdpc3RlcnMiLCB7CiAgICAgICAgICAgICAgICAgICAgcmVzdWx0OiByZXMsCiAgICAgICAgICAgICAgICAgICAgcGF5bG9hZDogcGFyYW0ucGF5bG9hZAogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocGFyYW0uc2NyZWVuS2V5ID09ICJwZXJzb25hbCIpIHsKICAgICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoInNldExpc3RQZXJzb25hbFJlZ2lzdGVycyIsIHsKICAgICAgICAgICAgICAgICAgICByZXN1bHQ6IHJlcywKICAgICAgICAgICAgICAgICAgICBwYXlsb2FkOiBwYXJhbS5wYXlsb2FkCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIHJlcyk7CgogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMSwsIDYsIDldXSk7CiAgICB9KSkoKTsKICB9Cn0pOwoKdmFyIG11dGF0aW9ucyA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgY3J1ZC5tdXRhdGlvbnMpLCB7fSwgewogIC8qKg0KICAgKiBTZXQgSXRlbXMgY2hvIG3DoG4gdOG6rXAgdGjhu4MgxJHEg25nIGvDvQ0KICAgKiBAcGFyYW0geyp9IHN0YXRlIA0KICAgKiBAcGFyYW0geyp9IGRhdGEgDQogICAqIE5UQkFPIDAxLjExLjIwMjENCiAgICovCiAgc2V0TGlzdFRlYW1SZWdpc3RlcnM6IGZ1bmN0aW9uIHNldExpc3RUZWFtUmVnaXN0ZXJzKHN0YXRlLCBkYXRhKSB7CiAgICBpZiAoZGF0YS5yZXN1bHQpIHsKICAgICAgZm9yICh2YXIgaSBpbiBkYXRhLnJlc3VsdCkgewogICAgICAgIHZhciByZXN1bHRWYWx1ZSA9IGRhdGEucmVzdWx0W2ldOwoKICAgICAgICBzd2l0Y2ggKGkpIHsKICAgICAgICAgIGNhc2UgIlBhZ2VEYXRhIjoKICAgICAgICAgICAgc3RhdGUubGlzdFRlYW1SZWdpc3RlcnMucmVtb3ZlQWxsKCk7CiAgICAgICAgICAgIHN0YXRlLmxpc3RUZWFtUmVnaXN0ZXJzLmFwcGVuZChyZXN1bHRWYWx1ZSk7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgIlRvdGFsIjoKICAgICAgICAgICAgc3RhdGUubGlzdFRlYW1SZWdpc3RlcnNUb3RhbCA9IHJlc3VsdFZhbHVlOwogICAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9LAoKICAvKioNCiAgICogU2V0IEl0ZW0gY2hvIG3DoG4gY8OhIG5ow6JuIMSRxINuZyBrw70NCiAgICogQHBhcmFtIHsqfSBzdGF0ZSANCiAgICogQHBhcmFtIHsqfSBkYXRhIA0KICAgKiBOVEJBTyAwMS4xMS4yMDIxDQogICAqLwogIHNldExpc3RQZXJzb25hbFJlZ2lzdGVyczogZnVuY3Rpb24gc2V0TGlzdFBlcnNvbmFsUmVnaXN0ZXJzKHN0YXRlLCBkYXRhKSB7CiAgICBpZiAoZGF0YS5yZXN1bHQpIHsKICAgICAgZm9yICh2YXIgaSBpbiBkYXRhLnJlc3VsdCkgewogICAgICAgIHZhciByZXN1bHRWYWx1ZSA9IGRhdGEucmVzdWx0W2ldOwoKICAgICAgICBzd2l0Y2ggKGkpIHsKICAgICAgICAgIGNhc2UgIlBhZ2VEYXRhIjoKICAgICAgICAgICAgc3RhdGUubGlzdFBlcnNvbmFsUmVnaXN0ZXJzLnJlbW92ZUFsbCgpOwogICAgICAgICAgICBzdGF0ZS5saXN0UGVyc29uYWxSZWdpc3RlcnMuYXBwZW5kKHJlc3VsdFZhbHVlKTsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAiVG90YWwiOgogICAgICAgICAgICBzdGF0ZS5saXN0UGVyc29uYWxSZWdpc3RlcnNUb3RhbCA9IHJlc3VsdFZhbHVlOwogICAgICAgICAgICBicmVhazsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cn0pOwoKZXhwb3J0IGRlZmF1bHQgewogIGRlYnVnOiBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gInByb2R1Y3Rpb24iLAogIG5hbWVzcGFjZWQ6IHRydWUsCiAgc3RhdGU6IHN0YXRlLAogIG11dGF0aW9uczogbXV0YXRpb25zLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgZ2V0dGVyczogZ2V0dGVycwp9Ow=="},null]}
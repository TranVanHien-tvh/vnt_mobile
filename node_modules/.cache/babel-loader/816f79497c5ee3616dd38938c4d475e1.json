{"remainingRequest":"D:\\VNT_vue\\node_modules\\babel-loader\\lib\\index.js!D:\\VNT_vue\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\VNT_vue\\src\\stores\\movement\\register-approval-synthesize\\module-register-personal.js","dependencies":[{"path":"D:\\VNT_vue\\src\\stores\\movement\\register-approval-synthesize\\module-register-personal.js","mtime":1653205086674},{"path":"D:\\VNT_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\VNT_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\VNT_vue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6L1ZOVF92dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICJEOi9WTlRfdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgYXBpIGZyb20gIkAvYXBpcy9tb3ZlbWVudC9lbXVsYXRpb25SZWdpc3RlckFQSSI7CmltcG9ydCBDcnVkIGZyb20gIkAvc3RvcmVzL2Jhc2UvY3J1ZC1iYXNlIjsKdmFyIGNydWQgPSBuZXcgQ3J1ZCgiRW11bGF0aW9uUmVnaXN0ZXIiLCBhcGkpOwoKdmFyIHN0YXRlID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBjcnVkLnN0YXRlKSwge30sIHsKICBfY29uZmlnOiB7CiAgICBmaWVsZDogewogICAgICBrZXk6ICJFbXVsYXRpb25SZWdpc3RlcklEIiwKICAgICAgbmFtZTogIkZ1bGxOYW1lIgogICAgfQogIH0KfSk7Cgp2YXIgZ2V0dGVycyA9IF9vYmplY3RTcHJlYWQoe30sIGNydWQuZ2V0dGVycyk7Cgp2YXIgYWN0aW9ucyA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgY3J1ZC5hY3Rpb25zKSwge30sIHsKICAvKioNCiAgICogTG9hZCBkYW5oIHPDoWNoIGPDoSBuaMOibg0KICAgKiBPdmVycmlkZSDEkeG7gyBn4buNaSBhcGkgcmnDqm5nDQogICAqIE5UQkFPOiAyNC4xMS4yMDIxDQogICAqIEBwYXJhbSB7Kn0gY29udGV4dA0KICAgKiBAcGFyYW0geyp9IHBheWxvYWQNCiAgICogQHJldHVybnMNCiAgICovCiAgbG9hZDogZnVuY3Rpb24gbG9hZChjb250ZXh0LCBwYXlsb2FkKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgcmVzOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgcmVzID0gbnVsbDsKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTsKICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgidXBkYXRlTG9hZGluZyIsIHRydWUpOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICAgIHJldHVybiBhcGkubG9hZExpc3RSZWdpc3RlckRldGFpbFBhZ2luZyhwYXlsb2FkIHx8IHt9KTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA2OwogICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCJ1cGRhdGVMb2FkaW5nIiwgZmFsc2UpOwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5maW5pc2goNik7CgogICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgaWYgKHJlcykgewogICAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoInNldEl0ZW1zIiwgewogICAgICAgICAgICAgICAgICByZXN1bHQ6IHJlcywKICAgICAgICAgICAgICAgICAgcGF5bG9hZDogcGF5bG9hZAogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCByZXMpOwoKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSwgbnVsbCwgW1sxLCwgNiwgOV1dKTsKICAgIH0pKSgpOwogIH0sCgogIC8qKg0KICAgKiBH4buNaSBhcGkgbG9hZCBzdW1hcnkgKGTDsm5nIHThu5VuZyBj4buZbmcsIGNoaSB0aeG6v3QgdGjDtG5nIHPhu5Eg4bufIGZvb290ZXIpDQogICAqIE92ZXJyaWRlIMSR4buDIGfhu41pIGFwaSByacOqbmcNCiAgICogTlRCQU86IDI0LjExLjIwMjENCiAgICogQHBhcmFtIHsqfSBjb250ZXh0DQogICAqIEBwYXJhbSB7Kn0gcGF5bG9hZA0KICAgKiBAcmV0dXJucw0KICAgKi8KICBsb2FkU3VtbWFyeTogZnVuY3Rpb24gbG9hZFN1bW1hcnkoY29udGV4dCwgcGF5bG9hZCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciByZXM7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgcmVzID0gbnVsbDsKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDE7CiAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoInVwZGF0ZUxvYWRpbmdTdW1tYXJ5IiwgdHJ1ZSk7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgIHJldHVybiBhcGkubG9hZExpc3RSZWdpc3RlckRldGFpbFBhZ2luZyhwYXlsb2FkIHx8IHt9KTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDIuc2VudDsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDY7CiAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoInVwZGF0ZUxvYWRpbmdTdW1tYXJ5IiwgZmFsc2UpOwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuZmluaXNoKDYpOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIGlmIChyZXMpIHsKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCJzZXRJdGVtcyIsIHsKICAgICAgICAgICAgICAgICAgcmVzdWx0OiByZXMsCiAgICAgICAgICAgICAgICAgIHBheWxvYWQ6IHBheWxvYWQKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIHJlcyk7CgogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMSwsIDYsIDldXSk7CiAgICB9KSkoKTsKICB9Cn0pOwoKdmFyIG11dGF0aW9ucyA9IF9vYmplY3RTcHJlYWQoe30sIGNydWQubXV0YXRpb25zKTsKCmV4cG9ydCBkZWZhdWx0IHsKICBkZWJ1ZzogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICJwcm9kdWN0aW9uIiwKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiBzdGF0ZSwKICBtdXRhdGlvbnM6IG11dGF0aW9ucywKICBhY3Rpb25zOiBhY3Rpb25zLAogIGdldHRlcnM6IGdldHRlcnMKfTs="},null]}
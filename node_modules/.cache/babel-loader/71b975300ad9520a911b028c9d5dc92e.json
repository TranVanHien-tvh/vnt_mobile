{"remainingRequest":"D:\\VNT_vue\\node_modules\\babel-loader\\lib\\index.js!D:\\VNT_vue\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\VNT_vue\\src\\stores\\movement\\register-approval-synthesize\\module-approve-team.js","dependencies":[{"path":"D:\\VNT_vue\\src\\stores\\movement\\register-approval-synthesize\\module-approve-team.js","mtime":1653205086672},{"path":"D:\\VNT_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\VNT_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\VNT_vue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6L1ZOVF92dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX29iamVjdFNwcmVhZCBmcm9tICJEOi9WTlRfdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgYXBpIGZyb20gIkAvYXBpcy9tb3ZlbWVudC9lbXVsYXRpb25SZWdpc3RlckFQSSI7CmltcG9ydCBDcnVkIGZyb20gIkAvc3RvcmVzL2Jhc2UvY3J1ZC1iYXNlIjsKdmFyIGNydWQgPSBuZXcgQ3J1ZCgiRW11bGF0aW9uUmVnaXN0ZXIiLCBhcGkpOwoKdmFyIHN0YXRlID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBjcnVkLnN0YXRlKSwge30sIHsKICBfY29uZmlnOiB7CiAgICBmaWVsZDogewogICAgICBrZXk6ICJFbXVsYXRpb25SZWdpc3RlcklEIiwKICAgICAgbmFtZTogIk5hbWUiCiAgICB9CiAgfQp9KTsKCnZhciBnZXR0ZXJzID0gX29iamVjdFNwcmVhZCh7fSwgY3J1ZC5nZXR0ZXJzKTsKCnZhciBhY3Rpb25zID0gX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBjcnVkLmFjdGlvbnMpLCB7fSwgewogIC8qKg0KICAgKiBMb2FkIGRhbmggc8OhY2ggdOG6rXAgdGjhu4MNCiAgICogT3ZlcnJpZGUgxJHhu4MgZ+G7jWkgYXBpIHJpw6puZw0KICAgKiBOVEJBTzogMjQuMTEuMjAyMQ0KICAgKiBAcGFyYW0geyp9IGNvbnRleHQNCiAgICogQHBhcmFtIHsqfSBwYXlsb2FkDQogICAqIEByZXR1cm5zDQogICAqLwogIGxvYWQ6IGZ1bmN0aW9uIGxvYWQoY29udGV4dCwgcGF5bG9hZCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIHJlczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIHJlcyA9IG51bGw7CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE7CiAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoInVwZGF0ZUxvYWRpbmciLCB0cnVlKTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNTsKICAgICAgICAgICAgICByZXR1cm4gYXBpLmxvYWRMaXN0RGV0YWlsUGFnaW5nKHBheWxvYWQgfHwge30pOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0LnNlbnQ7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDY7CiAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoInVwZGF0ZUxvYWRpbmciLCBmYWxzZSk7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmZpbmlzaCg2KTsKCiAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICBpZiAocmVzKSB7CiAgICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgic2V0SXRlbXMiLCB7CiAgICAgICAgICAgICAgICAgIHJlc3VsdDogcmVzLAogICAgICAgICAgICAgICAgICBwYXlsb2FkOiBwYXlsb2FkCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlcyk7CgogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzEsLCA2LCA5XV0pOwogICAgfSkpKCk7CiAgfSwKCiAgLyoqDQogICAqIEfhu41pIGFwaSBsb2FkIHN1bWFyeSAoZMOybmcgdOG7lW5nIGPhu5luZywgY2hpIHRp4bq/dCB0aMO0bmcgc+G7kSDhu58gZm9vb3RlcikNCiAgICogT3ZlcnJpZGUgxJHhu4MgZ+G7jWkgYXBpIHJpw6puZw0KICAgKiBOVEJBTzogMjQuMTEuMjAyMQ0KICAgKiBAcGFyYW0geyp9IGNvbnRleHQNCiAgICogQHBhcmFtIHsqfSBwYXlsb2FkDQogICAqIEByZXR1cm5zDQogICAqLwogIGxvYWRTdW1tYXJ5OiBmdW5jdGlvbiBsb2FkU3VtbWFyeShjb250ZXh0LCBwYXlsb2FkKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgdmFyIHJlczsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICByZXMgPSBudWxsOwogICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTsKICAgICAgICAgICAgICBjb250ZXh0LmNvbW1pdCgidXBkYXRlTG9hZGluZ1N1bW1hcnkiLCB0cnVlKTsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDU7CiAgICAgICAgICAgICAgcmV0dXJuIGFwaS5sb2FkTGlzdERldGFpbFBhZ2luZyhwYXlsb2FkIHx8IHt9KTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDIuc2VudDsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDY7CiAgICAgICAgICAgICAgY29udGV4dC5jb21taXQoInVwZGF0ZUxvYWRpbmdTdW1tYXJ5IiwgZmFsc2UpOwogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuZmluaXNoKDYpOwoKICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgIGlmIChyZXMpIHsKICAgICAgICAgICAgICAgIGNvbnRleHQuY29tbWl0KCJzZXRJdGVtcyIsIHsKICAgICAgICAgICAgICAgICAgcmVzdWx0OiByZXMsCiAgICAgICAgICAgICAgICAgIHBheWxvYWQ6IHBheWxvYWQKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIHJlcyk7CgogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIsIG51bGwsIFtbMSwsIDYsIDldXSk7CiAgICB9KSkoKTsKICB9Cn0pOwoKdmFyIG11dGF0aW9ucyA9IF9vYmplY3RTcHJlYWQoe30sIGNydWQubXV0YXRpb25zKTsKCmV4cG9ydCBkZWZhdWx0IHsKICBkZWJ1ZzogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICJwcm9kdWN0aW9uIiwKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiBzdGF0ZSwKICBtdXRhdGlvbnM6IG11dGF0aW9ucywKICBhY3Rpb25zOiBhY3Rpb25zLAogIGdldHRlcnM6IGdldHRlcnMKfTs="},null]}
{"remainingRequest":"D:\\VNT_vue\\node_modules\\babel-loader\\lib\\index.js!D:\\VNT_vue\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\VNT_vue\\src\\commons\\modelUtil.js","dependencies":[{"path":"D:\\VNT_vue\\src\\commons\\modelUtil.js","mtime":1653205086171},{"path":"D:\\VNT_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\VNT_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\VNT_vue\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICJEOi9WTlRfdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiRDovVk5UX3Z1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIkQ6L1ZOVF92dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwppbXBvcnQgY29tbW9uRm4gZnJvbSAnLi9jb21tb25GdW5jdGlvbi5qcyc7CmltcG9ydCBVdGlsaXR5IGZyb20gJ0AvY29tbW9ucy91dGlsaXR5JzsKaW1wb3J0IFZ1ZSBmcm9tICd2dWUnOwovKioNCiAqIENsYXNzIHRo4buxYyBoaeG7h24gY8OhYyBhY3Rpb24geOG7rSBsw70gY2hvIE1vZGVsIHBow61hIGNsaWVudA0KICogQGF1dGhvciBETlRoYW5nIC0gMTkuOC4yMDE5DQogKi8KCnZhciBNb2RlbFV0aWwgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIE1vZGVsVXRpbCgpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBNb2RlbFV0aWwpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKE1vZGVsVXRpbCwgbnVsbCwgW3sKICAgIGtleTogImNyZWF0ZU1vZGVsIiwKICAgIHZhbHVlOiAvLyNyZWdpb24gUHJvcGVydHkKICAgIC8vI2VuZHJlZ2lvbiBQcm9wZXJ0eQoKICAgIC8qKg0KICAgICAqIFRo4buxYyBoaeG7h24ga2jhu59pIHThuqFvIE1vZGVsIHThu6sgb2JqZWN0DQogICAgICogQHBhcmFtIHtPYmplY3RbXX0gcmVjb3JkcyBvYmplY3QgaG/hurdjIGFycmF5IG9iamVjdCBj4bqnbiBjb252ZXJ0IHNhbmcgTW9kZWwNCiAgICAgKiBAcGFyYW0ge01vZGVsfSBtb2RlbCBraeG7g3UgbW9kZWwgY+G6p24gdOG6oW8gY+G7p2Egb2JqZWN0DQogICAgICogQHBhcmFtIHtCb29sZWFufSBpc1RlbXAgQ8OzIHBo4bqjaSBsw6AgdGVtcCBtb2RlbCBraMO0bmcNCiAgICAgKiBO4bq/dSB0cnV54buBbiB2w6BvIE9iamVjdCB0aMOsIHPhur0gcmV0dXJuIE9iamVjdCwgbuG6v3UgdHJ1eeG7gW4gdsOgbyBBcnJheSB0aMOsIHPhur0gcmV0dXJuIEFycmF5DQogICAgICovCiAgICBmdW5jdGlvbiBjcmVhdGVNb2RlbChyZWNvcmRzLCBtb2RlbCwgaXNUZW1wLCBpc1BoYW50b20pIHsKICAgICAgdmFyIG1lID0gdGhpcywKICAgICAgICAgIHJldDsKCiAgICAgIGlmICghbW9kZWwpIHsKICAgICAgICByZXR1cm4gcmVjb3JkczsKICAgICAgfQoKICAgICAgcmVjb3JkcyA9IHJlY29yZHMgPyByZWNvcmRzIDoge307CgogICAgICB2YXIgY29udmVydFRvTW9kZWwgPSBmdW5jdGlvbiBjb252ZXJ0VG9Nb2RlbChyZWNvcmQsIG1vZGVsLCBpc1RlbXApIHsKICAgICAgICBpZiAoIXJlY29yZCkgewogICAgICAgICAgcmV0dXJuIHJlY29yZDsKICAgICAgICB9CgogICAgICAgIGlmIChyZWNvcmQuaXNNb2RlbCkgewogICAgICAgICAgaWYgKGlzVGVtcCkgewogICAgICAgICAgICByZWNvcmQuc2V0VGVtcE1vZGVsKGlzVGVtcCk7CiAgICAgICAgICB9CgogICAgICAgICAgaWYgKHR5cGVvZiBpc1BoYW50b20gIT0gJ3VuZGVmaW5lZCcgJiYgaXNQaGFudG9tICE9IG51bGwpIHsKICAgICAgICAgICAgcmVjb3JkLnNldFBoYW50b20oaXNQaGFudG9tKTsKICAgICAgICAgIH0KCiAgICAgICAgICByZXR1cm4gcmVjb3JkOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB2YXIgZW50aXR5ID0gbmV3IG1vZGVsKHJlY29yZCk7CgogICAgICAgICAgaWYgKGVudGl0eS5pc01vZGVsKSB7CiAgICAgICAgICAgIGlmIChpc1RlbXApIHsKICAgICAgICAgICAgICBlbnRpdHkuc2V0VGVtcE1vZGVsKGlzVGVtcCk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmICh0eXBlb2YgaXNQaGFudG9tICE9ICd1bmRlZmluZWQnICYmIGlzUGhhbnRvbSAhPSBudWxsKSB7CiAgICAgICAgICAgICAgZW50aXR5LnNldFBoYW50b20oaXNQaGFudG9tKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSAvLyByZXQuYWRkKGVudGl0eSk7CgoKICAgICAgICAgIHJldHVybiBlbnRpdHk7CiAgICAgICAgfQogICAgICB9OwoKICAgICAgaWYgKHJlY29yZHMgaW5zdGFuY2VvZiBBcnJheSkgewogICAgICAgIHZhciBpID0gMDsKICAgICAgICByZXQgPSBbXTsKCiAgICAgICAgZm9yIChpID0gMDsgaSA8IHJlY29yZHMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIHZhciBlbnRpdHkgPSBjb252ZXJ0VG9Nb2RlbChyZWNvcmRzW2ldLCBtb2RlbCwgaXNUZW1wKTsKICAgICAgICAgIHJldC5hZGQoZW50aXR5KTsKICAgICAgICB9CiAgICAgIH0gZWxzZSBpZiAocmVjb3JkcyBpbnN0YW5jZW9mIE9iamVjdCkgewogICAgICAgIHJldCA9IGNvbnZlcnRUb01vZGVsKHJlY29yZHMsIG1vZGVsLCBpc1RlbXApOwogICAgICB9IGVsc2UgewogICAgICAgIGNvbW1vbkZuLmluZm9Mb2dnaW5nKCdERVY6IFJlY29yZCB0byBjb252ZXJ0IHJlcXVpcmUgb2JqZWN0LicpOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgcmV0dXJuIHJldDsKICAgIH0KICAgIC8qKg0KICAgICAqIEzhuqV5IHJhIGRhbmggc8OhY2ggY8OhYyB0csaw4budbmcgQ3VzdG9tRmllbGQgbeG6t2MgxJHhu4tuaCBtw6AgaOG7hyB0aOG7kW5nIMSRw6FwIOG7qW5nIGNobyBjaOG7qW5nIHThu6sNCiAgICAgKiBIaeG7h24gdOG6oWkgaOG7lyB0cuG7oyB04buRaSDEkWEgbMOgIDEwIGN1c3RvbUZpZWxkDQogICAgICogQ3JlYXRlZEJ5IEROVGhhbmcgLSAwMS4xMC4yMDE5DQogICAgICovCgogIH0sIHsKICAgIGtleTogImdldExpc3RDdXN0b21GaWVsZERlZmF1bHQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGdldExpc3RDdXN0b21GaWVsZERlZmF1bHQoKSB7CiAgICAgIHZhciBtYXhGaWVsZCA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogbnVsbDsKICAgICAgdmFyIG1lID0gdGhpcywKICAgICAgICAgIHJlc3VsdCA9IFtdLAogICAgICAgICAgaTsKICAgICAgbWF4RmllbGQgPSBtYXhGaWVsZCA/IG1heEZpZWxkIDogMTA7CgogICAgICBmb3IgKGkgPSAwOyBpIDwgbWF4RmllbGQ7IGkrKykgewogICAgICAgIHJlc3VsdC5hZGQoewogICAgICAgICAgbmFtZTogbWUuY3VzdG9tRmllbGQgKyAoaSArIDEpLnRvU3RyaW5nKCksCiAgICAgICAgICB0eXBlOiAnYW55JwogICAgICAgIH0pOwogICAgICB9CgogICAgICByZXR1cm4gcmVzdWx0OwogICAgfQogICAgLyoqDQogICAgICogQ29udmVydCB04burIGThu68gbGnhu4d1IHN0cmluZyBzYW5nIGtp4buDdSBEYXRlVGltZQ0KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJjb252ZXJ0U3RyaW5nVG9EYXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjb252ZXJ0U3RyaW5nVG9EYXRlKGRhdGVTdHJpbmcpIHsKICAgICAgcmV0dXJuIFV0aWxpdHkuY29udmVydFN0cmluZ1RvRGF0ZShkYXRlU3RyaW5nKTsKICAgIH0KICAgIC8qKg0KICAgICAqDQogICAgICogQHBhcmFtIHtPYmplY3R9IG9iaiDEkOG7kWkgdMaw4bujbmcgY+G6p24gYuG7lSBzdW5nIHJlYWN0aXZlDQogICAgICogQHBhcmFtIHtTdHJpbmd9IGtleSBGaWVsZCBj4bqnbiByZWFjdGl2ZQ0KICAgICAqIEBwYXJhbSB7YW55fSB2YWwgR2nDoSB0cuG7iyBnw6FuIHbDoG8NCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiZGVmaW5lVnVlUmVhY3RpdmUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGRlZmluZVZ1ZVJlYWN0aXZlKG9iaiwga2V5LCB2YWwpIHsKICAgICAgdmFyIHYgPSBWdWU7CgogICAgICBpZiAob2JqICYmIGtleSAmJiB2ICYmIHYudXRpbCAmJiB2LnV0aWwuZGVmaW5lUmVhY3RpdmUpIHsKICAgICAgICB2YXIgb2IgPSBvYmouX19vYl9fOwoKICAgICAgICBpZiAoIW9iKSB7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICB2LnV0aWwuZGVmaW5lUmVhY3RpdmUob2JqLCBrZXksIHZhbCk7IC8vIG9iLmRlcC5ub3RpZnkoKTsKICAgICAgfQogICAgfQogICAgLyoqDQogICAgICogWOG7rSBsw70geMOzYSByZWFjdGl2ZSBj4bunYSBt4buZdCBwcm9wZXJ0eSB0csOqbiBPYmplY3QNCiAgICAgKiBAcGFyYW0ge09iamVjdH0gb2JqIMSQ4buRaSB0xrDhu6NuZyBj4bqnbiB4w7NhIGZpZWxkIHJlYWN0aXZlDQogICAgICogQHBhcmFtIHtTdHJpbmd9IGtleSBGaWVsZCBuYW1lIGPhuqduIHjDs2EgcmVhY3RpdmUNCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAiZGVsZXRlVnVlUmVhY3RpdmUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGRlbGV0ZVZ1ZVJlYWN0aXZlKG9iaiwga2V5KSB7CiAgICAgIHZhciB2ID0gVnVlOwoKICAgICAgaWYgKG9iaiAmJiBrZXkgJiYgdiAmJiB2LmRlbGV0ZSkgewogICAgICAgIHZhciBvYiA9IG9iai5fX29iX187CgogICAgICAgIGlmICghb2IpIHsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIHYuZGVsZXRlKG9iaiwga2V5KTsKICAgICAgfQogICAgfQogIH0sIHsKICAgIGtleTogImFkZE5vbmVSZWFjdGl2ZVByb3BlcnR5IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBhZGROb25lUmVhY3RpdmVQcm9wZXJ0eShzY29wZSwgZmllbGROYW1lLCB2YWx1ZSkgewogICAgICBpZiAoc2NvcGUgJiYgZmllbGROYW1lKSB7CiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHNjb3BlLCBmaWVsZE5hbWUsIHsKICAgICAgICAgIGVudW1lcmFibGU6IGZhbHNlLAogICAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSwKICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLAogICAgICAgICAgdmFsdWU6IHZhbHVlCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KICB9XSk7CgogIHJldHVybiBNb2RlbFV0aWw7Cn0oKTsKCl9kZWZpbmVQcm9wZXJ0eShNb2RlbFV0aWwsICJjdXN0b21GaWVsZCIsICdjdXN0b21fZmllbGQnKTsKCmV4cG9ydCB7IE1vZGVsVXRpbCBhcyBkZWZhdWx0IH07"},null]}
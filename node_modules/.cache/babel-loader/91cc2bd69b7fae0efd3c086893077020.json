{"remainingRequest":"D:\\VNT_vue\\node_modules\\babel-loader\\lib\\index.js!D:\\VNT_vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\VNT_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\VNT_vue\\src\\components\\msgridviewer\\msTr.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\VNT_vue\\src\\components\\msgridviewer\\msTr.vue","mtime":1653205086449},{"path":"D:\\VNT_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\VNT_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\VNT_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\VNT_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}